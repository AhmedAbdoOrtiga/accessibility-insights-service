# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
steps:
    - template: ./install-dependencies-steps.yaml

    - script: |
          yarn format:check
      displayName: check code formatting

    - script: |
          yarn copyright:check
      displayName: check for copyright headers

    - template: ./build-steps.yaml

    - script: |
          yarn lint:check
      displayName: run linter

    - template: ./test-steps.yaml
      parameters: { totalTestSlices: '${{ parameters.totalTestSlices }}', testSlicesToRun: '${{ parameters.testSlicesToRun }}' }

    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'
      inputs:
          failOnAlert: true
      condition: in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual')

    - task: msospo.ospo-extension.8d7f9abb-6896-461d-9e25-4f74ed65ddb2.notice@0
      displayName: 'generate NOTICE.html file'
      condition: in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual')
      inputs:
          outputfile: $(System.DefaultWorkingDirectory)/packages/cli/NOTICES.html
          outputformat: html
      timeoutInMinutes: 5

    - script: |
          yarn run pack
      displayName: create npm package zips

    - task: CopyFiles@2
      inputs:
          SourceFolder: packages
          Contents: |
              web-api-scan-job-manager/dist/**/*
              web-api-send-notification-job-manager/dist/**/*
              web-api-scan-runner/dist/**/*
              web-api-send-notification-runner/dist/**/*
              web-api-scan-request-sender/dist/**/*
              resource-deployment/dist/**/*
              web-api/dist/**/*
              web-workers/dist/**/*
              functional-tests/dist/**/*
              health-client/dist/**/*
              cli/drop/*
              !**/node_modules/**/*
              !**/.vscode/**/*
              !**/*.md
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy files to staging directory'

    - task: PublishBuildArtifacts@1
      inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: drop
      displayName: 'Publish build artifacts'
